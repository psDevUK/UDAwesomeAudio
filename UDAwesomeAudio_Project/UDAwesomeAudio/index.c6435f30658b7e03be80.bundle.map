{"version":3,"sources":["webpack://udawesomeaudio/webpack/bootstrap","webpack://udawesomeaudio/external \"react\"","webpack://udawesomeaudio/./node_modules/react-awesome-audio/dist/index.js","webpack://udawesomeaudio/./node_modules/react-awesome-audio/dist/useAudio.js","webpack://udawesomeaudio/./components/component.jsx","webpack://udawesomeaudio/./node_modules/universal-dashboard/index.js","webpack://udawesomeaudio/./components/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","react","useAudio","useAudio_1","react_1","options","audio","useMemo","Audio","src","isPlaying","setIsplaying","useState","play","then","catch","error","_a","console","log","onError","pause","useEffect","loop","volume","muted","onloadeddata","e","onLoadedData","addEventListener","onEnded","removeEventListener","toggle","withComponentFeatures","component","post","id","data","Promise","resolve","reject","UniversalDashboard","returnData","subscribeToIncomingEvents","callback","subscribe","event","type","unsubscribeFromIncomingEvents","token","unsubscribe","render","history","obj","toString","isString","version","renderComponent","props","componentState","setComponentState","incomingEvent","state","requestId","message","sendComponentState","children","concat","elements","hidden","Math","random","substr","additionalProps","setState","newComponentState","publish","notifyOfEvent","eventName","eventId","eventData","keys","forEach","x","endpoint","headers","accept","contentType","postWithHeaders","createElement","Fragment","_useAudio","external_react_default","a","onClick","register","UDAwesomeAudio"],"mappings":"+BACA,IAAAA,KAGA,SAAAC,EAAAC,GAGA,GAAAF,EAAAE,GACA,OAAAF,EAAAE,GAAAC,QAGA,IAAAC,EAAAJ,EAAAE,IACAG,EAAAH,EACAI,GAAA,EACAH,YAUA,OANAI,EAAAL,GAAAM,KAAAJ,EAAAD,QAAAC,IAAAD,QAAAF,GAGAG,EAAAE,GAAA,EAGAF,EAAAD,QA0DA,OArDAF,EAAAQ,EAAAF,EAGAN,EAAAS,EAAAV,EAGAC,EAAAU,EAAA,SAAAR,EAAAS,EAAAC,GACAZ,EAAAa,EAAAX,EAAAS,IACAG,OAAAC,eAAAb,EAAAS,GAA0CK,YAAA,EAAAC,IAAAL,KAK1CZ,EAAAkB,EAAA,SAAAhB,GACA,oBAAAiB,eAAAC,aACAN,OAAAC,eAAAb,EAAAiB,OAAAC,aAAwDC,MAAA,WAExDP,OAAAC,eAAAb,EAAA,cAAiDmB,OAAA,KAQjDrB,EAAAsB,EAAA,SAAAD,EAAAE,GAEA,GADA,EAAAA,IAAAF,EAAArB,EAAAqB,IACA,EAAAE,EAAA,OAAAF,EACA,KAAAE,GAAA,iBAAAF,QAAAG,WAAA,OAAAH,EACA,IAAAI,EAAAX,OAAAY,OAAA,MAGA,GAFA1B,EAAAkB,EAAAO,GACAX,OAAAC,eAAAU,EAAA,WAAyCT,YAAA,EAAAK,UACzC,EAAAE,GAAA,iBAAAF,EAAA,QAAAM,KAAAN,EAAArB,EAAAU,EAAAe,EAAAE,EAAA,SAAAA,GAAgH,OAAAN,EAAAM,IAAqBC,KAAA,KAAAD,IACrI,OAAAF,GAIAzB,EAAA6B,EAAA,SAAA1B,GACA,IAAAS,EAAAT,KAAAqB,WACA,WAA2B,OAAArB,EAAA,SAC3B,WAAiC,OAAAA,GAEjC,OADAH,EAAAU,EAAAE,EAAA,IAAAA,GACAA,GAIAZ,EAAAa,EAAA,SAAAiB,EAAAC,GAAsD,OAAAjB,OAAAkB,UAAAC,eAAA1B,KAAAuB,EAAAC,IAGtD/B,EAAAkC,EAAA,GAIAlC,IAAAmC,EAAA,mBClFAhC,EAAAD,QAAAkC,oCCSAtB,OAAAC,eAAAb,EAAA,cAA8CmB,OAAA,IAC9CnB,EAAAmC,cAAA,EAEA,IAAAC,EAAiBtC,EAAQ,GACzBc,OAAAC,eAAAb,EAAA,YAA4Cc,YAAA,EAAAC,IAAA,WAAqC,OAAAqB,EAAAD,0CCJjFvB,OAAAC,eAAAb,EAAA,cAA8CmB,OAAA,IAC9CnB,EAAAmC,cAAA,EACA,MAAAE,EAAgBvC,EAAQ,GAsDxBE,EAAAmC,SAhDA,CAAAG,IACA,MAAAC,GAAA,EAAAF,EAAAG,SAAA,QAAAC,MAAAH,EAAAI,MAAAJ,EAAAI,OAEAC,EAAAC,IAAA,EAAAP,EAAAQ,WAAA,GAEAC,EAAA,KACAP,EACAO,OACAC,KAAA,IAAAH,GAAA,IACAI,MAAAC,IACA,IAAAC,EACAN,GAAA,GACAO,QAAAC,IAAAH,GACA,QAAAC,EAAAZ,EAAAe,eAAA,IAAAH,KAAA7C,KAAAiC,EAAAW,MAIAK,EAAA,KACAV,GAAA,GACAL,EAAAe,SA2BA,OAvBA,EAAAjB,EAAAkB,WAAA,KAEAhB,EAAAiB,KAAAlB,EAAAkB,OAAA,EAEAjB,EAAAkB,OAAAnB,EAAAmB,QAAA,EAEAlB,EAAAmB,MAAApB,EAAAoB,QAAA,EAEAnB,EAAAoB,aAAA,CAAAC,IAAqC,IAAAV,EAAQ,eAAAA,EAAAZ,EAAAuB,oBAAA,IAAAX,OAAA,EAAAA,EAAA7C,KAAAiC,EAAAsB,KAE7CrB,EAAAuB,iBAAA,QAAAF,IACA,IAAAV,EAEA,QAAAA,EAAAZ,EAAAyB,eAAA,IAAAb,KAAA7C,KAAAiC,EAAAsB,GAEAtB,EAAAkB,KAAAjB,EAAAO,OAAAF,GAAA,KAGA,MACAN,EAAAkB,MAAAjB,EAAAyB,oBAAA,YAAApB,GAAA,OAEKL,EAAAD,KAEOK,YAAAG,OAAAQ,QAAAW,OAxBZ,IAAAtB,EAAAW,IAAAR,2ECzBeoB,ECdR,CAAAC,IAEP,MAkBAC,EAAA,CAAAC,EAAAC,IACA,IAAAC,QAAA,CAAAC,EAAAC,KACAC,mBAAAN,wCAAuEC,IAAGC,EAAAK,IAC1EH,EAAAG,OAaAC,EAAA,CAAAP,EAAAQ,IAYAH,mBAAAI,UAAAT,EAXA,CAAAA,EAAAU,KAEA,IAAAC,EAAAD,EAAAC,KACA,iBAAAA,IAEAA,EAAA,YAGAH,EAAAG,EAAAD,KAMAE,EAAAC,IACAR,mBAAAS,YAAAD,IAOA,MAAAE,EAAA,CAAAjB,EAAAkB,MAJA,SAAAC,GACA,0BAAA1E,OAAAkB,UAAAyD,SAAAlF,KAAAiF,IAIAE,CAAArB,KAGAA,EAAAsB,UAEAtB,EAAAsB,QAAA,MAGAJ,GAAAlB,EAAAkB,UACAA,EAAAlB,EAAAkB,UAIAX,mBAAAgB,gBAAAvB,EAAAkB,IAgIA,OA7HAM,IACA,MAAAC,EAAAC,GAAA3D,MAAAW,SAAA8C,GACAzD,MAAAqB,UAAA,KACAsC,EAAAF,KACSA,EAAAF,UAET,MASAK,EAAA,CAAAd,EAAAD,KAYA,GAXA,aAAAC,GACAa,MACAD,KACAb,EAAAgB,QAGA,aAAAf,GAvFA,EAAAgB,EAAAD,IACA,IAAAxB,QAAA,CAAAC,EAAAC,KACAC,mBAAAN,qDAAoF4B,IAAUD,EAAAzB,IAC9FA,EAAArB,MAAAwB,EAAAH,EAAArB,MAAAgD,SACAzB,EAAAF,OAoFA4B,CAAAnB,EAAAiB,UAAAJ,GAIA,eAAAZ,EACA,CACA,IAAAmB,EAAAP,EAAAO,SACA,MAAAA,IAEAA,MAGAA,IAAAC,OAAArB,EAAAsB,UAEAR,MAAmCD,EAAAO,aAGnC,iBAAAnB,GAEAa,MAAmCD,EAAAO,cAGnC,kBAAAnB,GAGAa,MAAmCD,EAAAU,QAAA,IAGnC,gBAAAtB,GAEAa,MAAmCD,EAAAH,QAAAc,KAAAC,SAAAjB,SAAA,IAAAkB,OAAA,QAInCvE,MAAAqB,UAAA,KACA,MAAA2B,EAAAN,EAAAe,EAAAtB,GAAAyB,GACA,WACAb,EAAAC,MAuBA,MAAAwB,GACAtB,SACAuB,SAAAZ,IACA,IAAAa,MACAhB,KACAG,GAEAF,EAAAe,IAEAC,QAAAnC,mBAAAmC,QACAC,cAvFA,CAAAC,EAAA5F,KACAuD,mBAAAmC,QAAA,iBACA7B,KAAA,cACAgC,QAAArB,EAAAtB,GAAA0C,EACAA,YACAE,UAAA9F,KAmFAiD,OACAQ,4BACAK,iCAsBA,OAnBArE,OAAAsG,KAAAtB,GAAAuB,QAAAC,IACA,MAAAxB,EAAAwB,IAAAxB,EAAAwB,GAAAC,WAEAX,EAAAU,GAAA,CAAA9C,IAEA,IAAAgD,KASA,OARA1B,EAAAwB,GAAAG,QAAA,KAAA3B,EAAAwB,GAAAG,SACAD,EAAA,OAAA1B,EAAAwB,GAAAG,QAGA3B,EAAAwB,GAAAI,aAAA,KAAA5B,EAAAwB,GAAAI,cACAF,EAAA,gBAAA1B,EAAAwB,GAAAI,aA9JA,EAAAnD,EAAAC,EAAAgD,IACA,IAAA/C,QAAA,CAAAC,EAAAC,KACAC,mBAAA+C,mDAAkFpD,IAAGC,EAAAK,IACrFH,EAAAG,IACa2C,KA6JbG,CAAA7B,EAAAwB,GAAA3G,KAAA6D,EAAAgD,QAKA1B,EAAAU,OACApE,MAAAwF,cAAAxF,MAAAyF,UAGAxD,MAA0ByB,KAAAc,MDxLXxC,CAXQ,SAAAyB,GAAS,IAAAiC,EACazF,oBACzCV,IAAKkE,EAAMtB,GACX3B,IAAKiD,EAAMjD,IACXc,KAAMmC,EAAMnC,KACZC,OAAQkC,EAAMlC,OACdC,MAAOiC,EAAMjC,QALPf,EADsBiF,EACtBjF,UAAwBsB,GADF2D,EACX9E,KADW8E,EACLtE,MADKsE,EACE3D,QAOhC,OAAO4D,EAAAC,EAAAJ,cAAA,WAAKG,EAAAC,EAAAJ,cAAA,UAAQK,QAAS9D,GAAStB,EAAY,QAAU,WET9D+B,mBAAmBsD,SAAS,iBAAkBC","file":"index.c6435f30658b7e03be80.bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n","module.exports = react;","\"use strict\";\n/**\n *\n * index.ts file\n * ----\n * Optimized and Supercharged React hook to play audio without any DOM element ðŸ’ªðŸŽ§\n * Created with love by Niloy Sikdar\n *\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.useAudio = void 0;\n// Exporting the useAudio hook\nvar useAudio_1 = require(\"./useAudio\");\nObject.defineProperty(exports, \"useAudio\", { enumerable: true, get: function () { return useAudio_1.useAudio; } });\n","\"use strict\";\n/**\n *\n * useAudio hook\n * ----\n * Optimized and Supercharged React hook to play audio without any DOM element ðŸ’ªðŸŽ§\n * Created with love by Niloy Sikdar\n *\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.useAudio = void 0;\nconst react_1 = require(\"react\");\n/**\n * useAudio hook to play and control the audio\n *\n * @param {*} options\n */\nconst useAudio = (options) => {\n    const audio = (0, react_1.useMemo)(() => new Audio(options.src), [options.src]);\n    // Managing the playing state\n    const [isPlaying, setIsplaying] = (0, react_1.useState)(false);\n    // play function to play the audio\n    const play = () => {\n        audio\n            .play()\n            .then(() => setIsplaying(true))\n            .catch((error) => {\n            var _a;\n            setIsplaying(false);\n            console.log(error);\n            (_a = options.onError) === null || _a === void 0 ? void 0 : _a.call(options, error);\n        });\n    };\n    // pause the audio\n    const pause = () => {\n        setIsplaying(false);\n        audio.pause();\n    };\n    // Toggle between play and pause\n    const toggle = () => (isPlaying ? pause() : play());\n    (0, react_1.useEffect)(() => {\n        // Loop the audio if loop is true, default is false\n        audio.loop = options.loop || false;\n        // Adjust the volume of the audio, default is 1(max)\n        audio.volume = options.volume || 1;\n        // Mute the audio if muted is true, default is false\n        audio.muted = options.muted || false;\n        // Execute the onLoadedData function after finishing the loading of audio\n        audio.onloadeddata = (e) => { var _a; return (_a = options.onLoadedData) === null || _a === void 0 ? void 0 : _a.call(options, e); };\n        // Execute after the ending of the audio\n        audio.addEventListener('ended', (e) => {\n            var _a;\n            // Execute the onEnded function\n            (_a = options.onEnded) === null || _a === void 0 ? void 0 : _a.call(options, e);\n            // Play again the audio after the end if loop is true\n            options.loop ? audio.play() : setIsplaying(false);\n        });\n        // Cleanup\n        return () => {\n            !options.loop && audio.removeEventListener('ended', () => setIsplaying(false));\n        };\n    }, [audio, options]);\n    // Returning isPlaying, play, pause, toogle\n    return { isPlaying, play, pause, toggle };\n};\nexports.useAudio = useAudio;\n","import React from 'react';\nimport { withComponentFeatures } from 'universal-dashboard';\nimport { useAudio } from \"react-awesome-audio\";\nconst UDAwesomeAudio = props => {\n  const { isPlaying, play, pause, toggle } = useAudio({\n    key: props.id,\n    src: props.src,\n    loop: props.loop,\n    volume: props.volume,\n    muted: props.muted,\n  });\n  return <div><button onClick={toggle}>{isPlaying ? \"Pause\" : \"Play\"}</button></div>;\n}\n\nexport default withComponentFeatures(UDAwesomeAudio)","export const withComponentFeatures = (component) => {\r\n\r\n    const getComponentData = (id) => {\r\n        return new Promise((resolve, reject) => {\r\n            UniversalDashboard.get(`/api/internal/component/element/${id}`, (data) => {\r\n                if (data.error) reject(data.error.message);\r\n                else resolve(data)\r\n            });\r\n        });\r\n    };\r\n\r\n    const sendComponentState = (requestId, state) => {\r\n        return new Promise((resolve, reject) => {\r\n            UniversalDashboard.post(`/api/internal/component/element/sessionState/${requestId}`, state, (data) => {\r\n                if (data.error) reject(data.error.message);\r\n                else resolve(data)\r\n            });\r\n        });\r\n    }\r\n\r\n    const post = (id, data) => {\r\n        return new Promise((resolve, reject) => {\r\n            UniversalDashboard.post(`/api/internal/component/element/${id}`, data, (returnData) => {\r\n                resolve(returnData)\r\n            });\r\n        });\r\n    }\r\n\r\n    const postWithHeaders = (id, data, headers) => {\r\n        return new Promise((resolve, reject) => {\r\n            UniversalDashboard.postWithHeaders(`/api/internal/component/element/${id}`, data, (returnData) => {\r\n                resolve(returnData)\r\n            }, headers);\r\n        });\r\n    }\r\n\r\n    const subscribeToIncomingEvents = (id, callback) => {\r\n        const incomingEvent = (id, event) => {\r\n\r\n            let type = event.type;\r\n            if (type === \"requestState\")\r\n            {\r\n                type = \"getState\"\r\n            }\r\n\r\n            callback(type, event);\r\n        }\r\n\r\n        return UniversalDashboard.subscribe(id, incomingEvent);\r\n    }\r\n\r\n    const unsubscribeFromIncomingEvents = (token) => {\r\n        UniversalDashboard.unsubscribe(token)\r\n    }\r\n\r\n    function isString (obj) {\r\n        return (Object.prototype.toString.call(obj) === '[object String]');\r\n    }    \r\n\r\n    const render = (component, history) => {\r\n        if (!isString(component))\r\n        {\r\n            // set props version\r\n            if (!component.version)\r\n            {\r\n                component.version = \"0\";    \r\n            }\r\n                \r\n            if (!history && component.history) {\r\n                history = component.history;\r\n            }\r\n        }\r\n\r\n        return UniversalDashboard.renderComponent(component, history);\r\n    }\r\n\r\n    const highOrderComponent = (props) => {\r\n        const [componentState, setComponentState] = react.useState(props);\r\n        react.useEffect(() => {\r\n            setComponentState(props);\r\n        }, [props.version])\r\n\r\n        const notifyOfEvent = (eventName, value) => {\r\n            UniversalDashboard.publish('element-event', {\r\n                type: \"clientEvent\",\r\n                eventId: props.id + eventName,\r\n                eventName: eventName,\r\n                eventData: value\r\n            });\r\n        }\r\n    \r\n        const incomingEvent = (type, event) => {\r\n            if (type === \"setState\")\r\n                setComponentState({\r\n                    ...componentState,\r\n                    ...event.state\r\n                });\r\n    \r\n            if (type === \"getState\") {\r\n                sendComponentState(event.requestId, componentState);\r\n            }\r\n                \r\n    \r\n            if (type === \"addElement\")\r\n            {\r\n                let children = componentState.children;\r\n                if (children == null)\r\n                {\r\n                    children = []\r\n                }\r\n    \r\n                children = children.concat(event.elements);\r\n    \r\n                setComponentState({...componentState, children});\r\n            }\r\n    \r\n            if (type === \"clearElement\")\r\n            {\r\n                setComponentState({...componentState, children: []});\r\n            }\r\n    \r\n            if (type === \"removeElement\")\r\n            {\r\n                // This isn't great\r\n                setComponentState({...componentState, hidden: true});\r\n            }\r\n    \r\n            if (type === \"syncElement\") \r\n            {\r\n                setComponentState({...componentState, version: Math.random().toString(36).substr(2, 5) })\r\n            }\r\n        }\r\n\r\n        react.useEffect(() => {\r\n            const token = subscribeToIncomingEvents(props.id, incomingEvent)\r\n            return () => {\r\n                unsubscribeFromIncomingEvents(token)\r\n            }\r\n        });\r\n        \r\n        // useEffect(() => {\r\n        //     return () => {\r\n        //         UniversalDashboard.publish('element-event', {\r\n        //             type: \"unregisterEvent\",\r\n        //             eventId: props.id\r\n        //         });\r\n\r\n        //         Object.keys(componentState).forEach(x => {\r\n        //             if (componentState[x] != null && componentState[x].endpoint)\r\n        //             {\r\n        //                 UniversalDashboard.publish('element-event', {\r\n        //                     type: \"unregisterEvent\",\r\n        //                     eventId: componentState[x].name\r\n        //                 });\r\n        //             }\r\n        //         });\r\n        //     }\r\n        // }, true)\r\n\r\n        const additionalProps = {\r\n            render,\r\n            setState: (state) => {\r\n                let newComponentState = {\r\n                    ...componentState,\r\n                    ...state\r\n                }\r\n                setComponentState(newComponentState);\r\n            },\r\n            publish: UniversalDashboard.publish,\r\n            notifyOfEvent,\r\n            post,\r\n            subscribeToIncomingEvents,\r\n            unsubscribeFromIncomingEvents\r\n        }\r\n\r\n        Object.keys(componentState).forEach(x => {\r\n            if (componentState[x] != null && componentState[x].endpoint)\r\n            {\r\n                additionalProps[x] = (data) => {\r\n\r\n                    let headers = {}\r\n                    if (componentState[x].accept && componentState[x].accept !== '') {\r\n                        headers['Accept'] = componentState[x].accept;\r\n                    } \r\n\r\n                    if (componentState[x].contentType && componentState[x].contentType !== '') {\r\n                        headers['Content-Type'] = componentState[x].contentType;\r\n                    } \r\n\r\n                    return postWithHeaders(componentState[x].name, data, headers);\r\n                }\r\n            }\r\n        })\r\n        \r\n        if (componentState.hidden) {\r\n            return react.createElement(react.Fragment);\r\n        }\r\n\r\n        return component({...componentState, ...additionalProps})\r\n    }\r\n\r\n    return highOrderComponent;\r\n}\r\n\r\nexport const registerComponent = (id, component) => {\r\n    UniversalDashboard.register(id, component);\r\n}\r\n","\nimport UDAwesomeAudio from './component';\nUniversalDashboard.register(\"udawesomeaudio\", UDAwesomeAudio);"],"sourceRoot":""}